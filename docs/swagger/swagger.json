{
  "swagger": "2.0",
  "info": {
    "description": "This is API documentation for PyKiln, an open source web pages kiln controller that runs on an ESP32 running Micropython. Find out more at [http://www.pykiln.com](http://www.pykiln.com) ",
    "version": "1.0",
    "title": "PyKiln API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "curlytalegames@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/CurlyTaleGamesLLC/PyKiln/blob/master/LICENSE"
    }
  },
  "host": "192.168.50.33",
  "basePath": "/",
  "tags": [
    {
      "name": "Settings",
      "description": "Everything about your Pets"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/scan": {
      "get": {
        "tags": [
          "Scanning"
        ],
        "summary": "Used to find PyKiln on local network",
        "description": "Returns a 200 response",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/beep": {
      "post": {
        "tags": [
          "Scanning"
        ],
        "summary": "Beeps the PyKiln to help identify which PyKiln has the IP address",
        "description": "Returns a 200 response",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/start": {
      "post": {
        "tags": [
          "Firing"
        ],
        "summary": "Starts the provided firing schedule",
        "description": "Returns a 200 response",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "order placed for purchasing the pet",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Start"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/stop": {
      "post": {
        "tags": [
          "Firing"
        ],
        "summary": "Stops the current firing schedule",
        "description": "Returns a 200 response",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/list": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "Lists names and IDs of all firing schedules on PyKiln",
        "description": "Returns an array of schedule names and IDs",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Schedules"
            }
          }
        }
      }
    },
    "/schedule/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "type": "string",
          "format": "uuid",
          "required": true,
          "description": "uuid of the schedule to get."
        }
      ],
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "Gets the segments and data for a firing schedule",
        "description": "Returns an array of schedule names and IDs",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedules"
        ],
        "summary": "Delete firing schedule by ID",
        "description": "For valid response try integer IDs with positive integer value.",
        "operationId": "deleteOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/schedule": {
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Saves the provided firing schedule",
        "description": "Returns a 200 response",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "order placed for purchasing the pet",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/duplicate": {
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Copies the current firing schedule",
        "description": "Returns a 200 response",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        }
      }
    },
    "/store/inventory": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns pet inventories by status",
        "description": "Returns a map of status codes to quantities",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "/store/order": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Place an order for a pet",
        "description": "",
        "operationId": "placeOrder",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "order placed for purchasing the pet",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/store/order/{orderId}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Find purchase order by ID",
        "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
        "operationId": "getOrderById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "Delete purchase order by ID",
        "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
        "operationId": "deleteOrder",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Start": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "Start"
      }
    },
    "Schedules": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScheduleFile"
      }
    },
    "ScheduleFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "example": "Cone 05"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "example": "Cone 05"
        }
      }
    },
    "SaveSchedule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        }
      },
      "xml": {
        "name": "Start"
      }
    }
  },
  "externalDocs": {
    "description": "GitHub Repository",
    "url": "https://github.com/CurlyTaleGamesLLC/PyKiln"
  }
}